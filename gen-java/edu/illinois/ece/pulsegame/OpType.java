/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package edu.illinois.ece.pulsegame;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * The four operations possible. Move, attack and buy are explained alongside
 * their arguments (MoveOp, AttackOp and BuyOp). Check weather is a unique
 * operation that consumes half the maximum queue length. It updates the
 * WeatherState in your own UserState.
 */
public enum OpType implements org.apache.thrift.TEnum {
  MOVE(0),
  ATTACK(1),
  BUY(2),
  CHECK_WEATHER(3);

  private final int value;

  private OpType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static OpType findByValue(int value) { 
    switch (value) {
      case 0:
        return MOVE;
      case 1:
        return ATTACK;
      case 2:
        return BUY;
      case 3:
        return CHECK_WEATHER;
      default:
        return null;
    }
  }
}
