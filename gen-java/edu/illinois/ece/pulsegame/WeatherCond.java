/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package edu.illinois.ece.pulsegame;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * Weather conditions.
 * 
 * Normal is where 0 beats 1, 1 beats 2 and 2 beats 0.
 * 
 * Reversed is the reverse of normal.
 * 
 * Dominate is where 0 beats both 1 and 2
 * 
 * Weak is where 0 is weak to both 1 and 2
 */
public enum WeatherCond implements org.apache.thrift.TEnum {
  NORMAL(0),
  REVERSED(1),
  DOMINATE(2),
  WEAK(3);

  private final int value;

  private WeatherCond(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static WeatherCond findByValue(int value) { 
    switch (value) {
      case 0:
        return NORMAL;
      case 1:
        return REVERSED;
      case 2:
        return DOMINATE;
      case 3:
        return WEAK;
      default:
        return null;
    }
  }
}
